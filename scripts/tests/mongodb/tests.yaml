# Test cases are executed in the order they are defined

# CREATE
- name: CREATE
  type: create
  log: 'Attempting to create a new user...'
  body:
    email:
      address: success@simulator.amazonses.com
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    uniqueID: ABC123
    attributes:
      - hello
      - world
  expectedCode: 201
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: false
      verificationToken: null
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

- name: CREATE DUPLICATE USER
  type: create
  log: 'Checking for CONFLICT when creating a duplicate user...'
  body:
    email:
      address: success@simulator.amazonses.com
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    uniqueID: ABC123
    attributes:
      - hello
      - world
  expectedCode: 409
  expectedResponse: 'User success@simulator.amazonses.com already exists in the database.'

# GET
- name: GET NONEXISTANT USER
  type: get
  log: 'Checking for NOT FOUND when getting a nonexistant user...'
  email: test@test.com
  password: password
  expectedCode: 404
  expectedResponse: 'User test@test.com not found in the database.'

- name: GET INCORRECT PASSWORD
  type: get
  log: 'Checking for UNAUTHORIZED when getting a user using an incorrect password...'
  email: success@simulator.amazonses.com
  password: incorrectPassword
  expectedCode: 401
  expectedResponse: 'Unable to validate user with provided credentials.'

- name: GET
  type: get
  log: 'Attempting to get the user...'
  email: success@simulator.amazonses.com
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: false
      verificationToken: null
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

- name: GET WITH PASSWORD MISTAKE
  type: get
  log: 'Attempting to get the user with a common password mistake...'
  email: success@simulator.amazonses.com
  password: -5f4dcc3b5aa765d61d8327deb882cf99
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: false
      verificationToken: null
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

# EMAIL
- name: EMAIL NONEXISTANT USER
  type: email
  log: 'Checking for NOT FOUND when sending an email to a nonexistant user...'
  email: test@test.com
  password: password
  expectedCode: 404
  expectedResponse: 'User test@test.com not found in the database.'

- name: EMAIL INCORRECT PASSWORD
  type: email
  log: 'Checking for UNAUTHORIZED when sending a verification email with an incorrect password...'
  email: success@simulator.amazonses.com
  password: incorrectPassword
  expectedCode: 401
  expectedResponse: 'Unable to validate user with provided credentials.'

- name: EMAIL
  type: email
  log: 'Attempting to send a verification email...'
  email: success@simulator.amazonses.com
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: false
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

# VERIFY
- name: VERIFY INCORRECT TOKEN
  type: verify
  log: 'Checking for BAD REQUEST when verifying with an incorrect token...'
  email: success@simulator.amazonses.com
  token: incorrectToken
  expectedCode: 400
  expectedResponse: 'Incorrect verification token.'

- name: VERIFY
  type: verify
  log: 'Attempting to verify the user...'
  email: success@simulator.amazonses.com
  token: GENERATED
  responseType: json
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: true
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

- name: VERIFY
  type: verify
  log: 'Attempting to verify the user and get HTML...'
  email: success@simulator.amazonses.com
  token: GENERATED
  responseType: html
  expectedCode: 200
  expectedResponse: |
    <!DOCTYPE html>
    <html>
      <div class="alert alert-success">
        <div align="center"><strong>Success!</strong><br>Your account has been verified.</div>
      </div>
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.6.0/css/bootstrap.min.css" />
    </html>

# RESET
- name: RESET NONEXISTANT USER
  type: reset
  log: 'Checking for NOT FOUND when resetting verification for a nonexistant user...'
  email: test@test.com
  password: test
  expectedCode: 404
  expectedResponse: 'User test@test.com not found in the database.'

- name: RESET INCORRECT PASSWORD
  type: reset
  log: 'Checking for UNAUTHORIZED when resetting user verification with an incorrect password...'
  email: success@simulator.amazonses.com
  password: incorrectPassword
  expectedCode: 401
  expectedResponse: 'Unable to validate user with provided credentials.'

- name: RESET
  type: reset
  log: 'Attempting to reset the user verification status...'
  email: success@simulator.amazonses.com
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: false
      verificationToken: null
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

# Re-verify the user for update tests
- name: EMAIL
  type: email
  log: 'Attempting to send another verification email...'
  email: success@simulator.amazonses.com
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: false
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

- name: VERIFY
  type: verify
  log: 'Attempting to re-verify the user...'
  email: success@simulator.amazonses.com
  token: GENERATED
  responseType: json
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: true
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: ABC123
    attributes:
      - hello
      - world

# UPDATE
- name: UPDATE NONEXISTANT USER
  type: update
  log: 'Checking for NOT FOUND when updating a nonexistant user...'
  existingEmail: test@test.com
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  body:
    email:
      address: success@simulator.amazonses.com
      verified: true
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    uniqueID: ABC123
    attributes:
      - hello
      - world
  expectedCode: 404
  expectedResponse: 'User test@test.com not found in the database.'

- name: UPDATE INCORRECT PASSWORD
  type: update
  log: 'Checking for UNAUTHORIZED when updating a user with an incorrect password...'
  existingEmail: null
  password: incorrectPassword
  body:
    email:
      address: success@simulator.amazonses.com
      verified: true
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    uniqueID: ABC123
    attributes:
      - hello
      - world
  expectedCode: 401
  expectedResponse: 'Unable to validate user with provided credentials.'

- name: UPDATE FIELD
  type: update
  log: 'Attempting to update the unique ID property...'
  existingEmail: null
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  body:
    email:
      address: success@simulator.amazonses.com
      verified: true
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    uniqueID: NEW_ID
    attributes:
      - hello
      - world
  expectedCode: 200
  expectedResponse:
    email:
      address: success@simulator.amazonses.com
      verified: true
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: NEW_ID
    attributes:
      - hello
      - world

- name: UPDATE EMAIL
  type: update
  log: 'Attempting to update the email...'
  existingEmail: success@simulator.amazonses.com
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  body:
    email:
      address: newemail@gmail.com
      verified: true
      verificationToken: GENERATED
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    uniqueID: NEW_ID
    attributes:
      - hello
      - world
  expectedCode: 200
  expectedResponse:
    email:
      address: newemail@gmail.com
      verified: false
      verificationToken: null
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: NEW_ID
    attributes:
      - hello
      - world

# DELETE
- name: DELETE NONEXISTANT USER
  type: delete
  log: 'Checking for NOT FOUND when deleting a nonexistant user...'
  email: test@test.com
  password: test
  expectedCode: 404
  expectedResponse: 'User test@test.com not found in the database.'

- name: DELETE INCORRECT PASSWORD
  type: delete
  log: 'Checking for UNAUTHORIZED when deleting a user with an incorrect password...'
  email: newemail@gmail.com
  password: incorrectPassword
  expectedCode: 401
  expectedResponse: 'Unable to validate user with provided credentials.'

- name: DELETE
  type: delete
  log: 'Attempting to delete the user...'
  email: newemail@gmail.com
  password: 5f4dcc3b5aa765d61d8327deb882cf99
  expectedCode: 200
  expectedResponse:
    email:
      address: newemail@gmail.com
      verified: false
      verificationToken: null
    password: 5f4dcc3b5aa765d61d8327deb882cf99
    creationTime: TIME
    lastUpdateTime: TIME
    uniqueID: NEW_ID
    attributes:
      - hello
      - world
