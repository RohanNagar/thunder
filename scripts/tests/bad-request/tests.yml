config:
  target: "http://localhost:8080"
  plugins:
    expect: {}
  phases:
    # Send bad-requests 20 scenarios per second for 30 seconds = total of 600 runs
    - name: bad-request-load
      duration: 30
      arrivalRate: 20
  ensure:
    # p99 latency should be 15ms or less
    p99: 100

scenarios:
  - name: POST /users
    flow:
      - post:
          url: '/users'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Cannot post a null user. (User: null)"

      - post:
          url: '/users'
          auth:
            user: application
            pass: secret
          json:
            email:
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Cannot post a user without an email address. (User: null)"

      - post:
          url: '/users'
          auth:
            user: application
            pass: secret
          json:
            email:
              address: invalidEmail
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Invalid email address format. Please try again. (User: invalidEmail)"

      - post:
          url: '/users'
          auth:
            user: application
            pass: secret
          json:
            email:
              address: test@test.com
            password: test
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Cannot post a user with invalid properties. (User: test@test.com)"

  - name: GET /users
    flow:
      - get:
          url: '/users'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: null)"

      - get:
          url: '/users?email='
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: )"

      - get:
          url: '/users?email=success@simulator.amazonses.com'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: ''
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

  - name: POST /verify
    flow:
      - post:
          url: '/verify'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: null)"

      - post:
          url: '/verify?email='
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: )"

      - post:
          url: '/verify?email=success@simulator.amazonses.com'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

      - post:
          url: '/verify?email=success@simulator.amazonses.com'
          headers:
            password: ''
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

  - name: GET /verify
    flow:
      - get:
          url: '/verify?token={{ verificationToken }}'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: null)"

      - get:
          url: '/verify?email=&token={{ verificationToken }}'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: )"

      - get:
          url: '/verify?email=success@simulator.amazonses.com'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing verification token query parameter. (User: success@simulator.amazonses.com)"

      - get:
          url: '/verify?email=success@simulator.amazonses.com&token='
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing verification token query parameter. (User: success@simulator.amazonses.com)"

  - name: POST /verify/reset
    flow:
      - post:
          url: '/verify/reset'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: null)"

      - post:
          url: '/verify/reset?email='
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: )"

      - post:
          url: '/verify/reset?email=success@simulator.amazonses.com'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

      - post:
          url: '/verify/reset?email=success@simulator.amazonses.com'
          headers:
            password: ''
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

  - name: PUT /users
    flow:
      - put:
          url: '/users'
          auth:
            user: application
            pass: secret
          json:
            email:
              address: success@simulator.amazonses.com
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            uniqueID: ABC123
            attributes:
              - hello
              - world
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

      - put:
          url: '/users'
          headers:
            password: ''
          auth:
            user: application
            pass: secret
          json:
            email:
              address: success@simulator.amazonses.com
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            uniqueID: ABC123
            attributes:
              - hello
              - world
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: success@simulator.amazonses.com)"

      - put:
          url: '/users'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Cannot post a null user. (User: null)"

      - put:
          url: '/users'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          json:
            email:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            uniqueID: ABC123
            attributes:
              - hello
              - world
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Cannot post a user without an email address. (User: null)"

      - put:
          url: '/users'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          json:
            email:
              address: invalidEmail
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            uniqueID: ABC123
            attributes:
              - hello
              - world
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Invalid email address format. Please try again. (User: invalidEmail)"

      - put:
          url: '/users'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          json:
            email:
              address: success@simulator.amazonses.com
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            uniqueID: ABC123
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Cannot post a user with invalid properties. (User: success@simulator.amazonses.com)"

  - name: DELETE /users
    flow:
      - delete:
          url: '/users'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: null)"

      - delete:
          url: '/users?email='
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Incorrect or missing email query parameter. (User: )"

      - delete:
          url: '/users?email=newemail@gmail.com'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: newemail@gmail.com)"

      - delete:
          url: '/users?email=newemail@gmail.com'
          headers:
            password: ''
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 400
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource. (User: newemail@gmail.com)"
