config:
  target: "http://localhost:8080"
  plugins:
    expect: {}
  phases:
    - name: oauth-functional-test
      duration: 1
      arrivalRate: 1
  variables:
    # Set to false to skip the metrics test
    testMetrics: true

scenarios:
  - name: oauth
    flow:
      # Create a new user
      - post:
          url: '/users'
          headers:
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWlzc3VlciIsImlhdCI6MTYxOTIxNDQ2NSwiZXhwIjo2NDc2NDY2MDM2OCwiYXVkIjoidGh1bmRlciIsInN1YiI6InRlc3RAdGVzdC5jb20ifQ.5LzREFp5kq01V5O8Sh4d3YsfU0kRvgqNWYzao_fmVwdeidycyeAIEJTbaRmKv-j9RxKGB0x40A6EEOuuaVEBgg"
          json:
            email:
              address: success@simulator.amazonses.com
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            uniqueID: ABC123
            attributes:
              - hello
              - world
          capture:
            json: $.email.address
            as: email
          expect:
            - statusCode: 201
            - hasProperty: creationTime
            - hasProperty: lastUpdateTime
            - equals:
                - "{{ email }}"
                - "success@simulator.amazonses.com"

      # Successfully get the user
      - log: "\nHS512 JWT token should work..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWlzc3VlciIsImlhdCI6MTYxOTIxNDQ2NSwiZXhwIjo2NDc2NDY2MDM2OCwiYXVkIjoidGh1bmRlciIsInN1YiI6InRlc3RAdGVzdC5jb20ifQ.5LzREFp5kq01V5O8Sh4d3YsfU0kRvgqNWYzao_fmVwdeidycyeAIEJTbaRmKv-j9RxKGB0x40A6EEOuuaVEBgg"
          capture:
            json: $.email.address
            as: email
          expect:
            - statusCode: 200
            - hasProperty: creationTime
            - hasProperty: lastUpdateTime
            - equals:
                - "{{ email }}"
                - "success@simulator.amazonses.com"

      - log: "\No JWT token should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          auth:
            user: application
            pass: secret
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\nExpired JWT token should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWlzc3VlciIsImlhdCI6MTYxOTIxNDQ2NSwiZXhwIjoxNjE5MjIwMjg4LCJhdWQiOiJ0aHVuZGVyIiwic3ViIjoidGVzdEB0ZXN0LmNvbSJ9.RnJ5mzn1sSj4b9hGKTJXGjHFAu1cCOT8zYyvFYfmzFI"
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\Not before 4022 JWT token should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMiwibmJmIjo2NDc2NDY2MDM2OH0.LZzojeyPFFIbollBFQMN1DhazkH37gB42BdzzPb4_ZN7J0klrz8xD1sXz4gFw_XL0RVu8gu-d653meMlNMX-oQ"
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\nInvalid JWT token should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer thistokenisnotright"
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\nUnknown JWT algorithm should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJhbGciOiJQUzM4NCIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.MqF1AKsJkijKnfqEI3VA1OnzAL2S4eIpAuievMgD3tEFyFMU67gCbg-fxsc5dLrxNwdZEXs9h0kkicJZ70mp6p5vdv-j2ycDKBWg05Un4OhEl7lYcdIsCsB8QUPmstF-lQWnNqnq3wra1GynJrOXDL27qIaJnnQKlXuayFntBF0j-82jpuVdMaSXvk3OGaOM-7rCRsBcSPmocaAO-uWJEGPw_OWVaC5RRdWDroPi4YL4lTkDEC-KEvVkqCnFm_40C-T_siXquh5FVbpJjb3W2_YvcqfDRj44TsRrpVhk6ohsHMNeUad_cxnFnpolIKnaXq_COv35e9EgeQIPAbgIeg"
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\nIncorrect audience should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWlzc3VlciIsImlhdCI6MTYxOTIxNDQ2NSwiZXhwIjo2NDc2NDY2MDM2OCwiYXVkIjoidGh1bmRlcjU1Iiwic3ViIjoidGVzdEB0ZXN0LmNvbSJ9.-bS1_APekpAYZEUiM1Gc_cVGwV3Bcghrb3bI-lqa_h37E0dDzg1bs1S1X7b9MRdS7ofS8ohoA7Lw_gpXuS5N5Q"
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\nIncorrect issuer should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWJhZC1pc3N1ZXIiLCJpYXQiOjE2MTkyMTQ0NjUsImV4cCI6NjQ3NjQ2NjAzNjgsImF1ZCI6InRodW5kZXIiLCJzdWIiOiJ0ZXN0QHRlc3QuY29tIn0.CePraWtys45_CtN6hCjH2uA-yyy5XZitcsKKcS3ckIU"
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\nSigned with incorrect key should fail..."
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWlzc3VlciIsImlhdCI6MTYxOTIxNDQ2NSwiZXhwIjo2NDc2NDY2MDM2OCwiYXVkIjoidGh1bmRlciIsInN1YiI6InRlc3RAdGVzdC5jb20ifQ.xXDnxiccspOUs_j0Ulrdhggd1Bc2gUlc414SFDm9lHs"
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 401
            - equals:
                - "{{ errorString }}"
                - "Credentials are required to access this resource."

      - log: "\nHS384 should work"
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzM4NCJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWlzc3VlciIsImlhdCI6MTYxOTIxNDQ2NSwiZXhwIjo2NDc2NDY2MDM2OCwiYXVkIjoidGh1bmRlciIsInN1YiI6InRlc3RAdGVzdC5jb20ifQ.ByOQQd35fdOpqzOo5A3v1BAzKtVImFt9jbo_K8wbIxwN9KX0NrIJWN1HmypsQ_Rd"
          capture:
            json: $.email.address
            as: email
          expect:
            - statusCode: 200
            - hasProperty: creationTime
            - hasProperty: lastUpdateTime
            - equals:
                - "{{ email }}"
                - "success@simulator.amazonses.com"

      - log: "\nHS256 should work"
      - get:
          url: '/users?email=success@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
            Authorization: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ0aHVuZGVyLW9hdXRoLWlzc3VlciIsImlhdCI6MTYxOTIxNDQ2NSwiZXhwIjo2NDc2NDY2MDM2OCwiYXVkIjoidGh1bmRlciIsInN1YiI6InRlc3RAdGVzdC5jb20ifQ.tQirYW-zHSAsS3xRYczyfsfVfolvv8O91HMhGz1qoGk"
          capture:
            json: $.email.address
            as: email
          expect:
            - statusCode: 200
            - hasProperty: creationTime
            - hasProperty: lastUpdateTime
            - equals:
                - "{{ email }}"
                - "success@simulator.amazonses.com"

      - log: "\nVerifying metrics were updated correctly?: {{ testMetrics }}"
      - get:
          url: 'http://localhost:8081/metrics'
          ifTrue: "testMetrics"
          capture:
            - json: $.counters["com.sanctionco.thunder.authentication.oauth.OAuthAuthenticator.jwt-verification-failure"].count
              as: jwtFailure
            - json: $.counters["com.sanctionco.thunder.authentication.oauth.OAuthAuthenticator.jwt-verification-success"].count
              as: jwtSuccess
          expect:
            - statusCode: 200
            - equals:
                - "{{ jwtFailure }}"
                - 7
            - equals:
                - "{{ jwtSuccess }}"
                - 4
