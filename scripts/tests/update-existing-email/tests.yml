config:
  target: "http://localhost:8080"
  plugins:
    expect: {}
  phases:
    - name: update-existing-email-functional-test
      duration: 1
      arrivalRate: 1

scenarios:
  - name: update-existing-email
    flow:

      - log: "Creating the first user..."
      - post:
          url: '/users'
          auth:
            user: application
            pass: secret
          json:
            email:
              address: firstuser@simulator.amazonses.com
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          capture:
            json: $.email.address
            as: email
          expect:
            - statusCode: 201
            - equals:
                - "{{ email }}"
                - "firstuser@simulator.amazonses.com"

      - log: "\nCreating the second user..."
      - post:
          url: '/users'
          auth:
            user: application
            pass: secret
          json:
            email:
              address: seconduser@simulator.amazonses.com
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          capture:
            json: $.email.address
            as: email
          expect:
            - statusCode: 201
            - equals:
                - "{{ email }}"
                - "seconduser@simulator.amazonses.com"

      - log: "\nChecking for CONFLICT when updating the email of the first user to the second user..."
      - put:
          url: '/users?email=firstuser@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          json:
            email:
              address: seconduser@simulator.amazonses.com
              verified: true
              verificationToken: shouldNotBeWritten
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          capture:
            regexp: .+
            as: errorString
          expect:
            - statusCode: 409
            - equals:
                - "{{ errorString }}"
                - "ConditionalCheck failed for insert/update. If this is an update, try again. If this is a new user, a user with the same email address already exists. (User: firstuser@simulator.amazonses.com)"

      - log: "\nMaking sure the first user still exists..."
      - get:
          url: '/users?email=firstuser@simulator.amazonses.com'
          headers:
            password: 5f4dcc3b5aa765d61d8327deb882cf99
          auth:
            user: application
            pass: secret
          capture:
            json: $.email.address
            as: email
          expect:
            - statusCode: 200
            - equals:
                - "{{ email }}"
                - "firstuser@simulator.amazonses.com"
