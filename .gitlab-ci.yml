image: maven:alpine

stages:
  - build
  - test
  - publish

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# Build the application
package:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  artifacts:
    paths:
      - application/target/application-*.jar
  cache:
    paths:
      - .m2/repository

# Test the Dockerfile
docker-test:
  stage: test
  image: docker:latest
  variables:
    DOCKER_HOST: tcp://docker:2375
  services:
    - docker:dind
  before_script:
    - apk --update add nodejs
    - npm --prefix scripts/ install
  script:
    - docker build -t rohannagar/thunder:test .
    - docker-compose up -d
    - sleep 10
    - node scripts/tools/test-runner.js -vb -n -d -e "http://docker:8080"
    - docker-compose down

# Build and push Docker edge image
docker:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u rohannagar --password-stdin
  script:
    - docker build -t rohannagar/thunder:edge .
    - docker push rohannagar/thunder:edge
  only:
    refs:
      - master

# Build and push Docker tagged image
docker-deploy:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - TAG_NUMBER="${CI_COMMIT_TAG:1}"
    - IMAGE_TAG="rohannagar/thunder:$TAG_NUMBER"
    - echo $DOCKER_PASSWORD | docker login -u rohannagar --password-stdin
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - tags
